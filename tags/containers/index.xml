<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>containers on Everyday Linux</title>
    <link>https://briantward.github.io/tags/containers/</link>
    <description>Recent content in containers on Everyday Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Dec 2019 00:00:00 +0000</lastBuildDate>
    
      <atom:link href="https://briantward.github.io/tags/containers/index.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>OpenShift Application Core Dumps</title>
        <link>https://briantward.github.io/openshift-application-coredumps/</link>
        <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/openshift-application-coredumps/</guid>
        <description>OpenShift Application Core Dumps When logs fail to provide us the information we need to diagnose an application problem, we may find it useful to take core dumps of memory, showing us the processes as they are currently running in the system. This is not something we want to do on a regular basis in production. Ideally such problems are discovered during application performance and load testing in lower environments. In reality we frequently find something unique about the real-world application load that our test scenarios could never uncover.</description>
      </item>
    
      <item>
        <title>Red Hat Certified Developer Containers</title>
        <link>https://briantward.github.io/dev-containers/</link>
        <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/dev-containers/</guid>
        <description>Red Hat Certified Developer Containers   registry.redhat.io/rhscl/devtoolset-8-toolchain-rhel7
https://access.redhat.com/containers/#/registry.access.redhat.com/rhscl/devtoolset-8-toolchain-rhel7
Platform for building C/C++ applications using Red Hat Developer Toolset 7. Red Hat Developer Toolset is a Red Hat offering for developers on the Red Hat Enterprise Linux platform. It provides a complete set of development and performance analysis tools that can be installed and used on multiple versions of Red Hat Enterprise Linux. Executables built with the Red Hat Developer Toolset toolchain can then also be deployed and run on multiple versions of Red Hat Enterprise Linux.</description>
      </item>
    
      <item>
        <title>Security Pipelines in OpenShift Container Platform</title>
        <link>https://briantward.github.io/security-pipelines/</link>
        <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/security-pipelines/</guid>
        <description>Security Pipelines in OpenShift Container Platform These are random notes for work in progress coded at https://github.com/briantward/container-pipelines/tree/parallel-spring-boot
 - two OCP clusters: nonprod (dev, test, etc) and prod (prod, stage) - allow nonprod cluster to continue pulling image updates automatically to registry - have separate registries between nonprod and prod - new builds only happen in nonprod, never in prod - existing dev pipeline must be aware of possible update to deployed container by alternative parallel pipeline route and keep base image in sync - new security pipeline, parallel to existing dev pipeline: -- poll for updates to images in nonprod cluster --- polling will check similar to what happens when the nonprod cluster syncs from RH Registry --- can we capture a log of the updates from RH registry and just act on them?</description>
      </item>
    
  </channel>
</rss>

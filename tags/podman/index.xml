<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>podman on Everyday Linux</title>
    <link>https://briantward.github.io/tags/podman/</link>
    <description>Recent content in podman on Everyday Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Feb 2021 00:00:00 +0000</lastBuildDate>
    
      <atom:link href="https://briantward.github.io/tags/podman/index.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>Running OpenShot in a Container</title>
        <link>https://briantward.github.io/openshot-in-a-container/</link>
        <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/openshot-in-a-container/</guid>
        <description>Running OpenShot in a Container Transform with OpenShot OpenShot on Fedora 33 doesn’t work. Well, not for me at least. Basically it installs fine and runs fine, but the moment I attempt to import a file, boom! Core Dump generated.
 using the following packages:
 $ rpm -qa openshot ffmpeg ffmpeg-4.3.1-16.fc33.x86_64 openshot-2.5.1-4.fc33.noarch   I found the following when searching around for similar issues:
 https://devtalk.blender.org/t/ffmpeg-issues-with-2-83-3/14559
 Which took me to this in the blender code:</description>
      </item>
    
      <item>
        <title>Running a Container as a Systemd Service on Fedora and RHEL</title>
        <link>https://briantward.github.io/running-container-as-systemd-service/</link>
        <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/running-container-as-systemd-service/</guid>
        <description>Running a Container as a Systemd Service on Fedora and RHEL There is some great documentation on this:
   Chapter 7. Running containers as systemd services with Podman
  Chapter 8. Container command-line reference: 8.1.10. Generate a systemd unit file
   Even better there is a man page:
 $ man podman-generate-systemd   The basic command looks like this, to be run on an existing running container:</description>
      </item>
    
      <item>
        <title>Running Secure Containers on Fedora 31 and RHEL 8</title>
        <link>https://briantward.github.io/running-secure-containers-on-fedora/</link>
        <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
        <guid>https://briantward.github.io/running-secure-containers-on-fedora/</guid>
        <description>Running Secure Containers on Fedora 31 and RHEL 8 The first thing to note here, is that &amp;#34;secured&amp;#34; means running the container with SELinux enforcing. If you don’t care about SELinux or have other alternatives in place, move along here, as you won’t find this useful. I will not be discussing application security or platform security.
 The second thing to note here, is that setting this up requires more work, per container, than running your container on OpenShift, which is Red Hat’s Container platform built on Kubernetes.</description>
      </item>
    
  </channel>
</rss>
